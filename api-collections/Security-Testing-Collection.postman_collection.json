{
	"info": {
		"_postman_id": "security-testing-collection",
		"name": "Security Level 1 Testing",
		"description": "Comprehensive security testing for Smart Deploy Monitor - Level 1 implementation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/actuator/health",
					"host": ["{{baseUrl}}"],
					"path": ["actuator", "health"]
				}
			},
			"response": []
		},
		{
			"name": "2. Security Headers Test",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/users?page=0&size=5",
					"host": ["{{baseUrl}}"],
					"path": ["api", "v1", "users"],
					"query": [
						{"key": "page", "value": "0"},
						{"key": "size", "value": "5"}
					]
				}
			},
			"response": []
		},
		{
			"name": "3. SQL Injection Test - Basic",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/users?search=1' OR '1'='1",
					"host": ["{{baseUrl}}"],
					"path": ["api", "v1", "users"],
					"query": [
						{"key": "search", "value": "1' OR '1'='1"}
					]
				}
			},
			"response": []
		},
		{
			"name": "4. SQL Injection Test - Union",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/users?search=1' UNION SELECT * FROM users",
					"host": ["{{baseUrl}}"],
					"path": ["api", "v1", "users"],
					"query": [
						{"key": "search", "value": "1' UNION SELECT * FROM users"}
					]
				}
			},
			"response": []
		},
		{
			"name": "5. XSS Test - Script Tag",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/users?search=<script>alert('xss')</script>",
					"host": ["{{baseUrl}}"],
					"path": ["api", "v1", "users"],
					"query": [
						{"key": "search", "value": "<script>alert('xss')</script>"}
					]
				}
			},
			"response": []
		},
		{
			"name": "6. XSS Test - JavaScript URL",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/users?search=javascript:alert('xss')",
					"host": ["{{baseUrl}}"],
					"path": ["api", "v1", "users"],
					"query": [
						{"key": "search", "value": "javascript:alert('xss')"}
					]
				}
			},
			"response": []
		},
		{
			"name": "7. Path Traversal Test",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/users/../../../etc/passwd",
					"host": ["{{baseUrl}}"],
					"path": ["api", "v1", "users", "../../../etc/passwd"]
				}
			},
			"response": []
		},
		{
			"name": "8. Rate Limiting Test - Normal",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/users?page=0&size=1",
					"host": ["{{baseUrl}}"],
					"path": ["api", "v1", "users"],
					"query": [
						{"key": "page", "value": "0"},
						{"key": "size", "value": "1"}
					]
				}
			},
			"response": []
		},
		{
			"name": "9. Rate Limiting Test - Rapid Requests",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/users?page=0&size=1",
					"host": ["{{baseUrl}}"],
					"path": ["api", "v1", "users"],
					"query": [
						{"key": "page", "value": "0"},
						{"key": "size", "value": "1"}
					]
				}
			},
			"response": []
		},
		{
			"name": "10. GraphQL Security Test",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"query\": \"query { users { edges { node { id firstName lastName } } totalCount } }\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/graphql",
					"host": ["{{baseUrl}}"],
					"path": ["graphql"]
				}
			},
			"response": []
		},
		{
			"name": "11. GraphQL Injection Test",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"query\": \"query { users { edges { node { id firstName lastName } } totalCount } }\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/graphql",
					"host": ["{{baseUrl}}"],
					"path": ["graphql"]
				}
			},
			"response": []
		},
		{
			"name": "12. Swagger UI Security Test",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/swagger-ui/index.html",
					"host": ["{{baseUrl}}"],
					"path": ["swagger-ui", "index.html"]
				}
			},
			"response": []
		},
		{
			"name": "13. Malicious User Agent Test",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "<script>alert('xss')</script>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/users?page=0&size=1",
					"host": ["{{baseUrl}}"],
					"path": ["api", "v1", "users"],
					"query": [
						{"key": "page", "value": "0"},
						{"key": "size", "value": "1"}
					]
				}
			},
			"response": []
		},
		{
			"name": "14. Security Headers Verification",
			"request": {
				"method": "HEAD",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/users?page=0&size=1",
					"host": ["{{baseUrl}}"],
					"path": ["api", "v1", "users"],
					"query": [
						{"key": "page", "value": "0"},
						{"key": "size", "value": "1"}
					]
				}
			},
			"response": []
		},
		{
			"name": "15. GraphQL Playground Security",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/graphiql",
					"host": ["{{baseUrl}}"],
					"path": ["graphiql"]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set base URL if not already set",
					"if (!pm.environment.get('baseUrl')) {",
					"    pm.environment.set('baseUrl', 'http://localhost:8080');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Test for security headers",
					"pm.test('Security headers present', function () {",
					"    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
					"    pm.expect(pm.response.headers.get('X-Frame-Options')).to.eql('DENY');",
					"    pm.expect(pm.response.headers.get('X-XSS-Protection')).to.eql('1; mode=block');",
					"});",
					"",
					"// Test for rate limiting (429 status)",
					"if (pm.response.code === 429) {",
					"    pm.test('Rate limiting working', function () {",
					"        pm.expect(pm.response.code).to.eql(429);",
					"    });",
					"}",
					"",
					"// Test for input validation (400 status)",
					"if (pm.response.code === 400) {",
					"    pm.test('Input validation working', function () {",
					"        pm.expect(pm.response.code).to.eql(400);",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}
